import Head from 'next/head'
import { useRouter } from 'next/router'
import React, { FormEvent, useEffect, useState } from 'react'
import { useDispatch, useSelector } from 'react-redux'
import AsideUsers from '../../../components/AsideUsers'
import Header from '../../../components/mobile/Header'
import RoomAside from '../../../components/RoomAside'
import { getUsers } from '../../../services/features/users/usersSlice'
import {
  logout,
  updateImage,
  updateUser,
} from '../../../services/features/auth/authSlice'
import { AppDispatch } from '../../../services/store'
import styles from '../../../styles/Home.module.css'
import { CiUser } from 'react-icons/ci'
import Image from 'next/image'
import { BiLoader, BiLoaderAlt } from 'react-icons/bi'
import { toast } from 'react-toastify'
import { iUserInput } from '../../../utils/types'

const profil = () => {
  const { user, isError, isLoading, isSucess, errorMessage } = useSelector(
    (state: any) => state.auth,
  )
  const dispatch = useDispatch<AppDispatch>()
  const [image, setImage] = useState<any>(null)
  const [profileInput, setProfileInput] = useState<iUserInput>({
    name: user?.name ?? '',
    lastname: user?.lastname ?? '',
    email: user?.email ?? '',
    username: user?.username ?? '',
  })
  const router = useRouter()

  const handleChange = (e: any) => {
    setProfileInput({ ...profileInput, [e.target.name]: e.target.value })
  }

  const handleSubmit = (e: FormEvent) => {
    e.preventDefault()
    dispatch(updateUser(profileInput))
  }

  const changeImgProfile = (e: FormEvent) => {
    e.preventDefault()
    const formData = new FormData()
    formData.append('image', image)
    dispatch(updateImage(formData))
  }

  useEffect(() => {
    dispatch(getUsers())
  }, [])

  useEffect(() => {
    if (isError) toast.error(`${errorMessage}`)
    if (isSucess) toast.success(` updated`)
  }, [isSucess, isError])
  return (
    <div className={styles.container}>
      <Head>
        <title>Crypto chat</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className='fixed top-0 bottom-0 left-0 right-0 flex bg-blue-900'>
        <RoomAside />
        <AsideUsers />

        {/* Main messages */}
        <div className='relative flex flex-col w-full p-0 m-0'>
          <Header />
          <div className='bottom-0 left-0 right-0 flex h-full p-4 m-0 overflow-y-scroll bg-gray-900 sm:rounded-xl sm:m-2'>
            <div className='flex flex-col items-center gap-8 m-4 profil md:flex-row'>
              <div className='flex flex-col items-center justify-center flex-1 gap-4 image_profile'>
                {/* profile img */}
                <div className='flex items-center justify-center w-40 h-40 rounded-full bg-slate-700 sm:h-72 sm:w-72 text-9xl text-slate-100'>
                  {isLoading ? (
                    <div className='flex items-center justify-center w-full h-full animate-spin'>
                      <BiLoaderAlt className='text-3xl' />
                    </div>
                  ) : (
                    <>
                      {user && user.imageUrl ? (
                        <div className='w-full h-full'>
                          <img
                            src={user.imageUrl}
                            width={'100%'}
                            height='100%'
                            className='w-full h-full rounded-full'
                          />
                        </div>
                      ) : (
                        <CiUser />
                      )}
                    </>
                  )}
                </div>
                <form
                  onSubmit={changeImgProfile}
                  className='w-full'
                  encType='multipart/form-data'
                >
                  <input
                    type='file'
                    name='image'
                    id=''
                    className='w-1/2 p-2 mx-auto text-slate-100'
                    onChange={(e) => {
                      console.log(e.target.files![0])
                      setImage(e.target.files![0])
                    }}
                  />
                  <button
                    type='submit'
                    className='w-full p-2 px-8 m-2 mt-4 bg-blue-900 rounded-sm md:w-40 hover:animate-pulse text-slate-100 '
                  >
                    {isLoading ? (
                      <div className='flex justify-center w-full'>
                        <BiLoader className='animate-spin' />
                      </div>
                    ) : (
                      <>Update</>
                    )}
                  </button>
                </form>
              </div>
              <div className='data flex-2'>
                <form onSubmit={handleSubmit}>
                  <h3 className='mx-2 my-4 text-xl text-blue-800 border-b-2 border-gray-600'>
                    Personal Informations
                  </h3>
                  <div className='flex flex-wrap pb-4'>
                    <div className='w-full p-2 sm:w-1/2 text-slate-300'>
                      <label htmlFor='name'>Firstname</label>
                      <input
                        type='text'
                        id='name'
                        name='name'
                        value={profileInput.name}
                        className='w-full p-2 rounded-sm text-slate-300 bg-slate-600'
                        onChange={handleChange}
                      />
                    </div>
                    <div className='w-full p-2 sm:w-1/2 text-slate-300'>
                      <label htmlFor='lastname'>Lastname</label>
                      <input
                        type='text'
                        id='lastname'
                        name='lastname'
                        value={profileInput.lastname}
                        className='w-full p-2 rounded-sm text-slate-300 bg-slate-600'
                        onChange={handleChange}
                      />
                    </div>
                  </div>
                  <h3 className='mx-2 my-4 text-xl text-blue-800 border-b-2 border-gray-600'>
                    Authentication information
                  </h3>
                  <div className='flex flex-wrap mb-4'>
                    <div className='w-full p-2 sm:w-1/2 text-slate-300'>
                      <label htmlFor='email'>Email</label>
                      <input
                        type='email'
                        id='email'
                        name='email'
                        value={profileInput.email}
                        className='w-full p-2 rounded-sm text-slate-300 bg-slate-600'
                        onChange={handleChange}
                      />
                    </div>
                    <div className='w-full p-2 sm:w-1/2 text-slate-300'>
                      <label htmlFor='lastname'>Username</label>
                      <input
                        type='text'
                        id='username'
                        name='username'
                        value={profileInput.username}
                        className='w-full p-2 rounded-sm text-slate-300 bg-slate-600 '
                        onChange={handleChange}
                      />
                    </div>
                  </div>
                  <div className='flex flex-wrap pb-2'>
                    <button className='w-full p-2 px-8 m-2 mt-4 bg-blue-900 rounded-sm md:w-40 hover:animate-pulse text-slate-100 '>
                      Update
                    </button>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
  )
}

export default profil
