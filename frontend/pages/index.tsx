// 'use client';

import Head from 'next/head'
import { useRouter } from 'next/router'
import styles from '../styles/Home.module.css'
import { useDispatch, useSelector } from 'react-redux'
import { getUsers } from '../services/features/users/usersSlice'
import { useEffect, useState } from 'react'
import { AppDispatch } from '../services/store'
import Link from 'next/link'
import { MdMessage } from 'react-icons/md'
import { toast } from 'react-toastify'

interface DataProps {
  name: string
  email: string
  message: string
}

export default function Home() {
  const [isLoading, setIsLoading] = useState(false)
  const router = useRouter()
  const dispatch = useDispatch<AppDispatch>()
  const [currentUser, setCurrentUser] = useState<any>(null)
  const {
    user,
    isError: isErrorUser,
    errorMessage: errorUser,
  } = useSelector((state: any) => state.auth)
  const { isError: isErrorMessages, errorMessage: errorMessages } = useSelector(
    (state: any) => state.messages,
  )

  const { isError: isErrorUsers, errorMessage: errorUsers } = useSelector(
    (state: any) => state.users,
  )

  useEffect(() => {
    if (!user) router.push('/auth/login')
    else dispatch(getUsers())
  }, [user, dispatch])

  useEffect(() => {
    if (isErrorMessages) toast.dark(errorMessages)
    if (isErrorUser) toast.dark(errorUser)
    if (isErrorUsers) toast.error(errorUsers)
  }, [isErrorMessages, isErrorUser])

  useEffect(() => {
    if (!user) router.push('/auth/login')
    else {
      setCurrentUser(user)
    }

    return () => {}
  }, [])

  const onSendMail = async (data: DataProps) => {
    try {
      setIsLoading(true)
      const res = await fetch('/api/contact', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      })

      const body = await res.json()

      if (res.ok) {
        alert(`${body.message} ðŸš€`)
      }

      if (res.status === 400) {
        alert(`${body.message} ðŸ˜¢`)
      }

      setIsLoading(false)
    } catch (err) {
      console.log('Something went wrong: ', err)
    }
  }

  return (
    <>
      <div className={styles.container}>
        <Head>
          <title>Chat</title>
          <meta name='description' content='Generated by create next app' />
          <link rel='icon' href='/favicon.ico' />
        </Head>

        <div>
          <div>Username: {currentUser?.name}</div>
          <div>ID: {currentUser?._id}</div>
          <div className='flex gap-2'>
            <div className='p-2 mt-5 text-center text-white bg-blue-500 rounded-lg shadow-lg w-28'>
              <Link href='/text-chats'>Text Chats</Link>
            </div>
            <div className='p-2 mt-5 text-center text-white bg-red-500 rounded-lg shadow-lg w-28'>
              <Link href='/video-chats'>Video Chats</Link>
            </div>
            <div className='p-2 mt-5 text-center text-white bg-green-500 rounded-lg shadow-lg w-28'>
              <Link href='/online-users'>Online Users</Link>
            </div>
            <div className='p-2 mt-5 text-center text-white bg-gray-500 rounded-lg shadow-lg w-28'>
              <button
                onClick={() =>
                  onSendMail({
                    name: 'Mehmethan Guven',
                    email: 'hankutis@gmail.com',
                    message: 'React Mail test',
                  })
                }
              >
                Send Email
              </button>
            </div>
          </div>
        </div>
      </div>
    </>
  )
}
